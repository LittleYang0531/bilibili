# This is a basic workflow to help you get started with Actions

name: php-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env: 
  VERSION: 8.1.7RC1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    name: Build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install dependences
        run: |
          sudo apt update
          sudo apt install -y pkg-config build-essential autoconf bison re2c libxml2-dev libsqlite3-dev libzip-dev libcurl4-gnutls-dev libtidy-dev libxslt1-dev libenchant-dev libc-client2007e-dev libkrb5-dev 
          wget https://github.com/kkos/oniguruma/releases/download/v6.9.7.1/onig-6.9.7.1.tar.gz -O onig-6.9.7.1.tar.gz 
          tar -zxvf onig-6.9.7.1.tar.gz 
          cd onig-6.9.7/ 
          sudo autoreconf -vfi 
          ./configure 
          sudo make -j32 && sudo make install 
          cd ~
      - name: Get PHP source
        run: |
          wget https://github.com/php/php-src/archive/refs/tags/php-$VERSION.zip -O php.zip
          unzip -q php.zip
          cd php-src-php-$VERSION/ext
      - name: Build Base Application
        run: |
          cd php-src-php-$VERSION
          ./buildconf --force
          ./buildconf
          ./configure --prefix=/etc/php/$VERSION --sysconfdir=/etc/php/$VERSION --with-config-file-path=/etc/php/$VERSION --enable-fpm --enable-cgi
          sudo make -j32
          sudo make install
          sudo cp ./php.ini-production /etc/php/$VERSION/php.ini
      - name: Build extensions
        run: |
          cd php-src-php-$VERSION/ext
          sudo rm hash -r
          sudo rm json -r
          for i in `ls -all | tail -n +4 | awk '{print $9}'`; do 
            if [ -d $i ] && [ -f $i/config.m4 ]; then
              cd $i
              echo --------------------------------------------------------
              echo 
              echo 
              echo Installing Extension $i for PHP$VERSION
              echo Recent Directroy: $(pwd)
              echo 
              echo 
              echo -------------------------------------------------------
              /etc/php/$VERSION/bin/phpize --force
              if [ $i == 'imap' ]; then ./configure --with-php-config=/etc/php/$VERSION/bin/php-config --with-kerberos --with-imap-ssl;
              else ./configure --with-php-config=/etc/php/$VERSION/bin/php-config;
              fi;
              sudo make && sudo make install
              cd ../;
            fi;
          done
      - name: Test php
        run: |
          cd /etc/php/$VERSION
          sudo zip ~/php$VERSION-linux-amd64.zip ./* -r
