# This is a basic workflow to help you get started with Actions

name: php-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env: 
  VERSION: 8.1.7RC1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  linux-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    name: Build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Test Github Release
        run: echo empty > test.txt
      # Runs a single command using the runners shell
      - name: Test GitHub release

        uses: marvinpinto/action-automatic-releases@latest

        with:

          repo_token: "${{ secrets.GITHUB_TOKEN }}"

          automatic_release_tag: php-${{ env.VERSION }}

          title: php-${{ env.VERSION }}

          prerelease: false

          files: |

            test.txt
      - name: Install dependences
        run: |
          sudo apt update
          sudo apt install -y pkg-config build-essential autoconf bison re2c libxml2-dev libsqlite3-dev libzip-dev libcurl4-gnutls-dev libtidy-dev libxslt1-dev libenchant-dev libc-client2007e-dev libkrb5-dev libldap2-dev unixodbc-dev libmysqlclient-dev freetds-dev libpspell-dev libreadline-dev librttr-dev libsnmp-dev libsocket++-dev libsodium-dev spl libsqlite3-dev zlib1g-dev libargon2-dev libedit-dev
          sudo mkdir /usr/local/incl
          sudo ln /usr/include/sqlext.h /usr/local/incl/sqlext.h -s
          wget https://github.com/kkos/oniguruma/releases/download/v6.9.7.1/onig-6.9.7.1.tar.gz -O onig-6.9.7.1.tar.gz 
          tar -zxvf onig-6.9.7.1.tar.gz 
          cd onig-6.9.7/ 
          sudo autoreconf -vfi 
          ./configure 
          sudo make -j32 && sudo make install 
          cd ~
      - name: Get PHP source
        run: |
          wget https://github.com/php/php-src/archive/refs/tags/php-$VERSION.zip -O php.zip
          unzip -q php.zip
          cd php-src-php-$VERSION/ext
      - name: Build Base Application
        run: |
          cd php-src-php-$VERSION
          ./buildconf --force
          ./buildconf
          ./configure --prefix=/etc/php/$VERSION --sysconfdir=/etc/php/$VERSION --with-config-file-path=/etc/php/$VERSION --enable-fpm --enable-cgi
          sudo make -j32
          sudo make install
          sudo cp ./php.ini-production /etc/php/$VERSION/php.ini
      - name: Build extensions
        run: |
          cd php-src-php-$VERSION/ext
          sudo rm hash -r
          sudo rm json -r
          sudo rm oci8 -r
          sudo rm pdo_* -r
          sudo rm reflection -r
          sudo rm spl -r
          sudo rm standard -r
          for i in `ls -all | tail -n +4 | awk '{print $9}'`; do 
            if [ -d $i ] && [ -f $i/config.m4 ]; then
              cd $i
              echo --------------------------------------------------------
              echo 
              echo 
              echo Installing Extension $i for PHP$VERSION
              echo Recent Directroy: $(pwd)
              echo 
              echo 
              echo -------------------------------------------------------
              /etc/php/$VERSION/bin/phpize --force
              if [ $i == 'imap' ]; then ./configure --with-php-config=/etc/php/$VERSION/bin/php-config --with-kerberos --with-imap-ssl;
              elif [ $i == 'odbc' ]; then ./configure --with-php-config=/etc/php/$VERSION/bin/php-config --with-pdo-odbc=unixODBC,/usr;
              else ./configure --with-php-config=/etc/php/$VERSION/bin/php-config;
              fi;
              sudo make -j32 && sudo make install
              cd ../;
            fi;
          done
      - name: Test php
        run: |
          cd /etc/php/$VERSION
          sudo zip ~/php$VERSION-linux-amd64.zip ./* -r
      - name: Make gcc deb

        run: |

          mkdir php-deb

          cd php-deb

          mkdir DEBIAN

          cd DEBIAN

          touch control

          echo Package: php >> control

          echo Version: $VERSION >> control

          echo Section: utils >> control

          echo Priority: optional >> control

          echo Depends: >> control

          echo Suggests: >> control

          echo Architecture: i386 >> control

          echo Maintainer: "LittleYang0531(https://github.com/LittleYang0531)" >> control

          echo Description: The Explaner of the Best Language in the world! >> control

          cd ../

          mkdir etc

          mkdir etc/php

          mkdir etc/php

          mkdir etc/php/$VERSION

          sudo cp /etc/php/$VERSION/* ./etc/php/$VERSION -r

          cd ../

          sudo chmod 0755 ./php-deb/DEBIAN

          sudo chmod 0755 ./php-deb/DEBIAN/control

          dpkg-deb -b php-deb

          mv php-deb.deb php-$VERSION.deb

      - name: Create GitHub release

        uses: marvinpinto/action-automatic-releases@latest

        with:

          repo_token: "${{ secrets.GITHUB_TOKEN }}"

          automatic_release_tag: php-${{ env.VERSION }}

          title: php-${{ env.VERSION }}

          prerelease: false

          files: |

            php-${{ env.VERSION }}.deb
